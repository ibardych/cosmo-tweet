{"version":3,"file":"static/js/406.e9ecc580.chunk.js","mappings":"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","sources":["components/Message/Message.styled.jsx","components/Message/Message.jsx","components/Styled/TweetsPage.styled.jsx","components/Tweets/Tweets.styled.jsx","components/User/User.styled.jsx","components/User/User.jsx","components/Tweets/Tweets.jsx","pages/TweetsPage.jsx"],"sourcesContent":["import styled from \"@emotion/styled\";\nimport { colors } from \"constants\";\n\nexport const MessageStyled = styled.div`\n  display: flex;\n  justify-content: center;\n  margin-top: 30px;\n\n  & div {\n    color: ${colors.color7};\n    border-radius: 5px;\n    font-size: 18px;\n    margin-bottom: 10px;\n    display: flex;\n    align-items: center;\n    gap: 10px;\n    padding: 7px 16px;\n    border-radius: 15px;\n    font-size: 14px;\n    font-weight: 500;\n    background-image: repeating-linear-gradient(\n      135deg,\n      rgba(255, 255, 42555, 0.1),\n      rgba(255, 255, 255, 0.1) 5px,\n      rgba(255, 255, 255, 0) 5px,\n      rgba(255, 255, 255, 0) 10px\n    );\n\n    & svg {\n      width: 22px;\n      height: 22px;\n      stroke: ${colors.color10};\n      fill: ${colors.color10};\n    }\n  }\n`;\n\n//\n","import { MessageStyled } from \"./Message.styled\";\nimport { IoWarningOutline } from \"react-icons/io5\";\n\nconst Message = ({ type, children }) => {\n  return (\n    <MessageStyled>\n      <div>\n        {type === \"error\" && <IoWarningOutline />}\n        {children}\n      </div>\n    </MessageStyled>\n  );\n};\n\nexport default Message;\n","import styled from \"@emotion/styled\";\n\nexport const TweetsPageStyled = styled.div`\n  padding-top: 50px;\n`;\n","import styled from \"@emotion/styled\";\nimport { container } from \"helpers\";\nimport { colors } from \"constants\";\nimport avatar from \"images/avatar@2x.png\";\nimport { mediaSizes } from \"constants\";\n\nexport const Wrapper = styled.div`\n  ${container}\n  display: flex;\n  flex-direction: column;\n  gap: 50px;\n  align-items: flex-start;\n  justify-content: center;\n  margin-top: 50px;\n\n  @media screen and (min-width: ${mediaSizes.tablet}) {\n    flex-direction: row;\n  }\n  @media screen and (min-width: ${mediaSizes.desktop}) {\n  }\n`;\n\nexport const TweetsStyled = styled.ul`\n  display: flex;\n  flex-direction: column;\n  gap: 10px;\n  width: 500px;\n  max-width: 100%;\n`;\n\nexport const Tweet = styled.li`\n  padding: 14px;\n  border-radius: 10px;\n  background-color: rgba(255, 255, 255, 0.7);\n  display: flex;\n  gap: 20px;\n  align-items: flex-start;\n  margin-left: ${({ owner }) => (owner ? \"0px\" : \"40px\")};\n  box-shadow: 2px 2px 5px 0px rgba(0, 0, 0, 0.05);\n`;\n\nexport const Avatar = styled.div`\n  width: 40px;\n  height: 40px;\n  background: url(${({ img }) => img || avatar}) center ${colors.color3};\n  background-size: cover;\n  border-radius: 50%;\n  overflow: hidden;\n  flex-shrink: 0;\n`;\n\nexport const Text = styled.div`\n  line-height: 1.3;\n  font-size: 15px;\n  display: flex;\n  flex-direction: column;\n  gap: 10px;\n  align-items: flex-start;\n`;\n\nexport const Date = styled.div`\n  font-size: 14px;\n  color: #ccc;\n`;\n","import styled from \"@emotion/styled\";\nimport { mediaSizes } from \"constants\";\nimport { colors } from \"constants\";\nimport avatar from \"images/avatar@2x.png\";\n\nexport const UserStyled = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 10px;\n  justify-content: center;\n  align-items: center;\n  background-color: ${colors.color6};\n  padding: 20px;\n  border-radius: 10px;\n  width: 100%;\n\n  @media screen and (min-width: ${mediaSizes.tablet}) {\n    width: 300px;\n    position: sticky;\n    top: 0;\n  }\n  @media screen and (min-width: ${mediaSizes.desktop}) {\n  }\n\n  & .button {\n    margin-top: 20px;\n  }\n`;\n\nexport const Avatar = styled.div`\n  width: 200px;\n  height: 200px;\n  background: url(${({ img }) => img || avatar}) center ${colors.color3};\n  background-size: cover;\n  border-radius: 50%;\n  overflow: hidden;\n`;\n\nexport const Name = styled.div`\n  font-size: 24px;\n  font-weight: 600;\n  margin-bottom: 10px;\n  line-height: 1.4;\n  color: ${colors.color4};\n  text-align: center;\n`;\n\nexport const Stat = styled.div`\n  font-size: 18px;\n  color: ${colors.color2};\n`;\n","import { Button } from \"components/Styled/Button.styled\";\nimport { Avatar, Name, Stat, UserStyled } from \"./User.styled\";\nimport { followUser } from \"redux/user/operations\";\nimport { useDispatch, useSelector } from \"react-redux\";\n\nfunction User({ user }) {\n  const dispatch = useDispatch();\n  const followedUsers = useSelector(({ user }) => user.followedUsers);\n  const { id, followers, tweets, avatar } = user;\n  const isFollowing = followedUsers.includes(id);\n\n  const handleFollow = async () => {\n    dispatch(followUser(user));\n  };\n\n  return (\n    <UserStyled>\n      <Avatar img={avatar} />\n      <Name>{user.user}</Name>\n      <Stat>{tweets.length.toLocaleString(\"en-US\")} Tweets</Stat>\n      <Stat>{followers.toLocaleString(\"en-US\")} Followers</Stat>\n      <Button className=\"button\" active={isFollowing} onClick={handleFollow}>\n        {isFollowing ? \"Following\" : \"Follow\"}\n      </Button>\n    </UserStyled>\n  );\n}\n\nexport default User;\n","import { useParams } from \"react-router-dom\";\nimport {\n  Avatar,\n  Date,\n  Text,\n  Tweet,\n  TweetsStyled,\n  Wrapper,\n} from \"./Tweets.styled\";\nimport { useSelector } from \"react-redux\";\nimport { useEffect, useState } from \"react\";\nimport User from \"components/User/User\";\nimport { formatDate } from \"helpers\";\nimport Message from \"components/Message/Message\";\n\nfunction Tweets() {\n  const isLoading = useSelector(({ loading }) => loading.isLoading);\n  const { userId } = useParams();\n  const users = useSelector(({ user }) => user.users);\n  const [user, setUser] = useState(null);\n  const error = useSelector(({ user }) => user.error);\n\n  useEffect(() => {\n    if (!isLoading) {\n      const result = users.filter((u) => u.id === userId);\n      if (result.length === 1) setUser(result[0]);\n    }\n  }, [isLoading, userId, users]);\n\n  return (\n    <Wrapper>\n      {user && (\n        <>\n          <User user={user} />\n\n          <TweetsStyled>\n            {!isLoading && user.tweets.length === 0 && !error && (\n              <Message class=\"messaage\">There are currently no tweets</Message>\n            )}\n\n            {user &&\n              !!user.tweets.length &&\n              user.tweets.map((tweet, index) => (\n                <Tweet key={index} owner={tweet.owner}>\n                  <Avatar img={tweet.owner ? user.avatar : tweet.avatar} />\n                  <Text>\n                    {tweet.text}\n                    <Date>{formatDate(tweet.date)}</Date>\n                  </Text>\n                </Tweet>\n              ))}\n          </TweetsStyled>\n        </>\n      )}\n    </Wrapper>\n  );\n}\n\nexport default Tweets;\n","import { BackButton } from \"components/Styled/Button.styled\";\nimport { TweetsPageStyled } from \"components/Styled/TweetsPage.styled\";\nimport Tweets from \"components/Tweets/Tweets\";\nimport { IoMdArrowRoundBack } from \"react-icons/io\";\n\nconst TweetsPage = () => {\n  return (\n    <TweetsPageStyled>\n      <BackButton to=\"/users\">\n        <IoMdArrowRoundBack />\n        Back\n      </BackButton>\n      <Tweets />\n    </TweetsPageStyled>\n  );\n};\n\nexport default TweetsPage;\n"],"names":["MessageStyled","styled","div","_templateObject","_taggedTemplateLiteral","colors","color7","color10","_ref","type","children","_jsx","_jsxs","IoWarningOutline","TweetsPageStyled","Wrapper","container","mediaSizes","tablet","desktop","TweetsStyled","ul","_templateObject2","Tweet","li","_templateObject3","owner","Avatar","_templateObject4","_ref2","img","avatar","color3","Text","_templateObject5","Date","_templateObject6","UserStyled","color6","Name","color4","Stat","color2","user","dispatch","useDispatch","followedUsers","useSelector","id","followers","tweets","isFollowing","includes","handleFollow","_ref3","_asyncToGenerator","_regeneratorRuntime","mark","_callee","wrap","_context","prev","next","followUser","stop","apply","arguments","length","toLocaleString","Button","className","active","onClick","isLoading","loading","userId","useParams","users","_useState","useState","_useState2","_slicedToArray","setUser","error","useEffect","result","filter","u","_Fragment","User","Message","class","map","tweet","index","text","formatDate","date","BackButton","to","IoMdArrowRoundBack","Tweets"],"sourceRoot":""}